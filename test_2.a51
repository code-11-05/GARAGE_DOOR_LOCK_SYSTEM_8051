ORG 0000H

PASSWORD_BUFFER EQU 30H
PASSWORD_ATTEMPT EQU 40H
MOTOR1_FORWARD      EQU     P2.4   ; Motor direction - forward (open)-IN2
MOTOR1_BACKWARD     EQU     P2.3    ; Motor direction - backward (close)-IN1
MOTOR1_ENABLE       EQU     P2.2    ; Motor enable-ENA
MOTOR2_FORWARD      EQU     P2.5    ; Motor direction - forward (open)-IN4
MOTOR2_BACKWARD     EQU     P2.6    ; Motor direction - backward (close)-IN3
MOTOR2_ENABLE       EQU     P2.7    ; Motor enable-ENB
IR1 EQU P3.5 ;IR SENSOR 1
IR2 EQU P3.6 ;IR SENSOR 2
SETB P3.7

START:
	MOV R0, #PASSWORD_BUFFER
	MOV R1, #PASSWORD_ATTEMPT
	MOV @R1, #3
SJMP COMMAND

COMMAND:
	MOV DPTR, #LCD_COMMAND
	MOV R2, #5
C1:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_COMNWRT
	INC DPTR
	DJNZ R2, C1
	ACALL DELAY_1S
	SJMP WELCOME
	
WELCOME:
	MOV A, #84H
	ACALL LCD_COMNWRT
	MOV DPTR, #LCD_WELCOME
	MOV R2, #8
D1:	
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R2, D1
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_1S
	ACALL LCD_CLEAR
	SJMP ENTER_PASSWORD

ENTER_PASSWORD:
	ACALL COMMAND2
	MOV A, #80H
	ACALL LCD_COMNWRT
	MOV DPTR, #LCD_ENTER_PASSWORD
	MOV R2, #15
D2:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R2, D2
	ACALL DELAY_71MS
	MOV A, #0C6H
	ACALL LCD_COMNWRT
	SJMP LENGTH

LENGTH: MOV R2, #4
KEYPAD_START: MOV P0,#0FFH

K1: 
	MOV P3,#0 ;ROWS - PORT3
	MOV A,P0 ;COLUMNS - PORT0
	ANL A,#00001111B
	CJNE A,#00001111B,K1

K2: 
	ACALL DELAY_71MS
	MOV A,P0 
	ANL A,#00001111B 
	CJNE A,#00001111B,OVER 
	SJMP K2 

OVER: 
	ACALL DELAY_71MS
	MOV A,P0 
	ANL A,#00001111B 
	CJNE A,#00001111B,OVER1
	SJMP K2 

OVER1: 
	MOV P3,#11111110B 
	MOV A,P0 
	ANL A,#00001111B 
	CJNE A,#00001111B,ROW_0 
	MOV P3,#11111101B 
	MOV A,P0 
	ANL A,#00001111B 
	CJNE A,#00001111B,ROW_1 
	MOV P3,#11111011B 
	MOV A,P0 
	ANL A,#00001111B 
	CJNE A,#00001111B,ROW_2
	MOV P3,#11110111B
	MOV A,P0
	ANL A,#00001111B
	CJNE A,#00001111B,ROW_3
	LJMP K2

ROW_0: 
	MOV DPTR, #KCODE0 
	SJMP FIND 
ROW_1: 
	MOV DPTR, #KCODE1 
	SJMP FIND 
ROW_2: 
	MOV DPTR, #KCODE2 
	SJMP FIND 
ROW_3: 
	MOV DPTR, #KCODE3 
	SJMP FIND

FIND: 
	RRC A 
	JNC MATCH 
	INC DPTR 
	SJMP FIND 
MATCH: 
	CLR A
	MOVC A,@A+DPTR
	ACALL LCD_DATAWRT
	MOV @R0, A
	INC R0
	DJNZ R2, K1
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_1S 
	ACALL LCD_CLEAR
	ACALL DELAY_1S
	SJMP PROCESS

PROCESS:
	ACALL COMMAND2
	MOV A, #82H
	ACALL LCD_COMNWRT
	MOV DPTR, #PROCESSING
	MOV R2, #12
D6:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR 
	DJNZ R2, D6
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_1S
	SJMP PASSWORD_LENGTH

PASSWORD_LENGTH:
	ACALL COMMAND2
	MOV R7, #4
	MOV R0, #PASSWORD_BUFFER
	MOV DPTR, #PASSWORD
VERIFY_PASSWORD:
	MOV B, @R0
	CLR A
	MOVC A, @A+DPTR
	CJNE A, B, INCORRECT_PASSWORD
	INC R0
	INC DPTR
	DJNZ R7, VERIFY_PASSWORD
	SJMP CORRECT_PASSWORD

CORRECT_PASSWORD:
	ACALL LCD_CLEAR
	ACALL COMMAND2
	MOV DPTR, #CORRECT_MESSAGE
	MOV A, #84H
	ACALL LCD_COMNWRT
	MOV R2, #7
D3:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR 
	DJNZ R2, D3
	MOV A, #0C3H
	ACALL LCD_COMNWRT
	MOV R2, #9
D8:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R2, D8
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_1S
	ACALL LCD_CLEAR
	LJMP DOOR_OPEN

INCORRECT_PASSWORD:
	DEC @R1
	ACALL LCD_CLEAR
	ACALL COMMAND2
	MOV DPTR, #INCORRECT_MESSAGE
	MOV A, #83H
	ACALL LCD_COMNWRT
	MOV R2, #9
D4:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R2, D4
	MOV A, #0C3H
	ACALL LCD_COMNWRT
	MOV R2, #9
D9:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R2, D9
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_1S
	ACALL LCD_CLEAR
	CJNE @R1, #0, TRY_MESSAGE
	SJMP BUZZER_ALERT

TRY_MESSAGE:
	ACALL COMMAND2
	MOV A, #83H
	ACALL LCD_COMNWRT
	MOV DPTR, #TRY_AGAIN
	MOV R0, #10
D5:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR 
	DJNZ R0, D5
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_1S
	ACALL LCD_CLEAR
	SJMP ATTEMPTS_LEFT

ATTEMPTS_LEFT:
	ACALL COMMAND2
	MOV A, #84H
	ACALL LCD_COMNWRT
	MOV R0, #8
	MOV DPTR, #ATTEMPT_LEFT
D12:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R0, D12
	MOV A, #0C5H
	ACALL LCD_COMNWRT
	MOV R0, #5
D13:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R0, D13
	SJMP DISPLAY_NUMBER
	
DISPLAY_NUMBER:
	MOV DPTR, #ATTEMPT_NUMBER
	MOV A, #0CAH
	ACALL LCD_COMNWRT
	CLR A
	MOV A, @R1
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_1S
	ACALL LCD_CLEAR
	LCALL CLEAR_BUFFER
	LJMP ENTER_PASSWORD

BUZZER_ALERT:
	ACALL LCD_CLEAR
	ACALL COMMAND2
	MOV DPTR, #ATTEMPT_OVER
	MOV A, #84H
	ACALL LCD_COMNWRT
	MOV R2, #8
D10:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R2, D10
	MOV A, #0C5H
	ACALL LCD_COMNWRT
	MOV R2, #5
D11:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR
	DJNZ R2, D11
	MOV A, #0CH
	ACALL LCD_COMNWRT
	CLR P3.7
	ACALL DELAY_10S
	SETB P3.7
	LJMP CLOSE
	
DOOR_OPEN:
	ACALL COMMAND2
	MOV A, #83H
	ACALL LCD_COMNWRT
	MOV DPTR, #OPEN_DOOR
	MOV R0, #10
D7:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR 
	DJNZ R0, D7
	MOV A, #0CH
	ACALL LCD_COMNWRT
	ACALL DELAY_2S
	SJMP MOTOR_OPEN

MOTOR_OPEN:
	SETB MOTOR1_BACKWARD
	SETB MOTOR2_BACKWARD
	CLR MOTOR1_FORWARD
	CLR MOTOR2_FORWARD
	MOV R2, #1
	LOOP1:
	MOV R0, #100
	OPEN_PWM_LOOP:
		ACALL PWM_ON
		ACALL PWM_OFF
		DJNZ R0, OPEN_PWM_LOOP
		ACALL DELAY_1S
		DJNZ R2, LOOP1
	CLR MOTOR1_ENABLE
	CLR MOTOR2_ENABLE
	ACALL LCD_CLEAR
	MOTION1:
		JNB IR1, MOTION1
	MOTION2:
		JNB IR2, MOTION2
	PROCEED:
		ACALL DELAY_5S
	SJMP DOOR_CLOSE

DOOR_CLOSE:
	ACALL COMMAND2
	MOV A, #83H
	ACALL LCD_COMNWRT
	MOV DPTR, #CLOSE_DOOR
	MOV R0, #11
D14:
	CLR A
	MOVC A, @A+DPTR
	ACALL LCD_DATAWRT
	INC DPTR 
	DJNZ R0, D14
	MOV A, #0CH
	ACALL LCD_COMNWRT
	SJMP MOTOR_CLOSE

MOTOR_CLOSE:
	CLR MOTOR1_BACKWARD
	CLR MOTOR2_BACKWARD
	SETB MOTOR1_FORWARD
	SETB MOTOR2_FORWARD
	MOV R2, #10
	LOOP2:
	MOV R0, #10
	CLOSE_PWM_LOOP:
		ACALL PWM_ON
		ACALL PWM_OFF
		DJNZ R0, CLOSE_PWM_LOOP
		ACALL DELAY_1S
		DJNZ R2, LOOP2
	CLR MOTOR1_ENABLE
	CLR MOTOR2_ENABLE
	ACALL LCD_CLEAR
	MOV A, #08H
	ACALL LCD_COMNWRT
	ACALL DELAY_5S
	LJMP START

CLOSE:
	MOV A, #08H
	ACALL LCD_COMNWRT
	ACALL DELAY_20S
	LJMP START

LCD_COMNWRT:
	MOV P1, A ;
	CLR P2.0 ;RS
	SETB P2.1 ;EN
	ACALL DELAY_71MS
	CLR P2.1
	RET

LCD_DATAWRT:
	MOV P1, A ;
	SETB P2.0 ;RS
	SETB P2.1 ;EN
	ACALL DELAY_71MS
	CLR P2.1
	RET
	
DELAY_71MS:
	MOV R3, #255
	HERE1:MOV R4, #255
	HERE2:DJNZ R4, HERE2
		  DJNZ R3, HERE1
		  RET

DELAY_1S:
	MOV R3, #14
	HERE3:MOV R4, #255
	HERE4:MOV R5, #255
	HERE5:DJNZ R5, HERE5
		  DJNZ R4, HERE4
		  DJNZ R3, HERE3
		  RET

DELAY_10S:
	MOV R6, #10
	HERE6: 
		ACALL DELAY_1S
		DJNZ R6, HERE6
	RET

DELAY_20S:
	MOV R6, #20
	HERE7:
		ACALL DELAY_1S
		DJNZ R6, HERE7
	RET

DELAY_5S:
	MOV R6, #5
	HERE8: 
		ACALL DELAY_1S
		DJNZ R6, HERE8
	RET

DELAY_2S:
	MOV R6, #2
	HERE9: 
		ACALL DELAY_1S
		DJNZ R6, HERE9
	RET

LCD_CLEAR:
	MOV A, #01H
	ACALL LCD_COMNWRT
	RET

CLEAR_BUFFER:
	MOV R0, #PASSWORD_BUFFER
	RET

PWM_ON:                 ; ~75% ON
	SETB MOTOR1_ENABLE
	SETB MOTOR2_ENABLE
	MOV R3, #5
ON_DELAY_LOOP:
	MOV R4, #255
PWM_1: DJNZ R4, PWM_1
	DJNZ R3, ON_DELAY_LOOP
	RET

PWM_OFF:                ; ~25% OFF
	CLR MOTOR1_ENABLE
	CLR MOTOR2_ENABLE
	MOV R3, #3
OFF_DELAY_LOOP:
	MOV R4, #255
PWM_2: DJNZ R4, PWM_2
	DJNZ R3, OFF_DELAY_LOOP
	RET

COMMAND2:
	MOV A, #0FH
	ACALL LCD_COMNWRT
	MOV A, #06H
	ACALL LCD_COMNWRT
	MOV A, #01H
	ACALL LCD_COMNWRT
	RET

ORG 0300H
PROCESSING: DB 'V','E','R','I','F','Y','I','N','G','.','.','.'
OPEN_DOOR: DB 'D','O','O','R',' ','O','P','E','N','S'
CLOSE_DOOR: DB 'D','O','O','R',' ','C','L','O','S','E','S'
ATTEMPT_OVER: DB 'A','T','T','E','M','P','T','S','O','V','E','R','!'
ATTEMPT_LEFT: DB 'A','T','T','E','M','P','T','S','L','E','F','T',':'
ATTEMPT_NUMBER: DB '0','1','2'
PASSWORD: DB '1','2','3','4'
INCORRECT_MESSAGE: DB 'I','N','C','O','R','R','E','C','T','P','A','S','S','W','O','R','D','!'
CORRECT_MESSAGE: DB 'C','O','R','R','E','C','T','P','A','S','S','W','O','R','D','!'
TRY_AGAIN: DB 'T','R','Y',' ','A','G','A','I','N','!'
LCD_COMMAND: DB 38H, 0FH, 06H, 01H, 84H
LCD_WELCOME: DB 'W','E','L','C','O','M','E','!'
LCD_ENTER_PASSWORD: DB 'E','N','T','E','R',' ','P','A','S','S','W','O','R','D',':'
KCODE3: DB '*','0','#','D' 
KCODE2: DB '7','8','9','C'
KCODE1: DB '4','5','6','B' 
KCODE0: DB '1','2','3','A' 
END 